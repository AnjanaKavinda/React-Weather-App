{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","height","width","paddingTop","alignContent","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","App","api","classes","React","useState","expanded","setExpanded","query","setQuary","weather","setweather","jsondata","setjsondata","useEffect","removeError","addLoader","fetch","then","res","json","result","removeLoder","data","catch","error","console","addError","description","myclassNAme","document","getElementById","classList","add","remove","map","e","temp","weather_description","weatherData","dateNow","Date","iconurl","icon","weatherImage","className","Card","CardHeader","Avatar","aria-label","action","IconButton","color","title","CardContent","Paper","component","InputBase","placeholder","inputProps","onChange","target","value","type","iconButton","onClick","preventDefault","searchButtonPress","Divider","divider","orientation","elevation","Typography","paragraph","id","CircularProgress","city_name","moment","format","CardMedia","image","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","key","sunset_ts","details","valid_date","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bd5a16ea.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment'\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst backchange = (description) =>{\n  if (description ===\"Few clouds\"\n  ||\n  description ===\"Scattered clouds\"\n  ||\n  description ===\"Broken clouds\"\n  ||\n  description ===\"Overcast clouds\"\n  ) {\n    return 'Overcast-clouds';\n  }\n   else if (description ===\"Thunderstorm with light rain\"\n    || \n    description ===\"Thunderstorm with rain\"\n    ||\n    description ===\"Thunderstorm with heavy rain\"\n    ||\n    description ===\"Thunderstorm with light drizzle\"\n    ||\n    description ===\"Thunderstorm with drizzle\"\n    ||\n    description ===\"Thunderstorm with heavy drizzle\"\n    ||\n    description ===\"Thunderstorm with Hail\") {\n      return 'Thunderstorm-with-light-rain';\n      \n    }\n    else if (description ===\"Light Drizzle\"\n    ||\n    description ===\"Drizzle\"\n    ||\n    description ===\"Heavy Drizzle\"\n    ||\n    description ===\"Light Rain\"\n    ||\n    description ===\"Moderate Rain\"\n    ||\n   description ===\"Heavy Rain\"\n    ||\n    description ===\"Freezing rain\"\n    ) {\n      return 'Light-Drizzle';\n    }\n    else if (description ===\"Light shower rain\"\n    ||\n    description ===\"Shower rain\"\n    ||\n    description ===\"Heavy shower rain\"\n    ||\n    description ===\"Light snow\"\n    ||\n    description ===\"Snow\"\n    ||\n    description ===\"Heavy Snow\"\n    ||\n    description ===\"Mix snow/rain\"\n    ||\n    description ===\"Sleet\"\n    ||\n    description ===\"Heavy sleet\"\n    ||\n    description ===\"Snow shower\"\n    ||\n    description ===\"Heavy snow shower\"\n    ||\n    description ===\"Flurries\"\n    ) {\n      return 'Light-snow';\n    }\n    else if (description ===\"Mist\"\n    ||\n    description ===\"Smoke\"\n    ||\n    description ===\"Haze\"\n    ||\n    description ===\"Sand/dust\"\n    ||\n    description ===\"Fog\"\n    ||\n    description ===\"Freezing Fog\"\n    ||\n    description ===\"Mix snow/rain\"\n    ) {\n      return 'Freezing-Fog';\n    }\n    else if (description ===\"Clear sky\"\n    \n    ) {\n      return 'Clear-sky';\n    }\n   \n \n }\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 400,\n  },\n  media: {\n    height: 100,\n    width:100,\n    paddingTop: 10, // 16:9\n    alignContent: 'center'\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nfunction App() {\n  const api = {\n    key: \"e0b3d83f5334432ea6f5522dac4052da\",\n    base: \"https://api.weatherbit.io/v2.0/\"\n\n  };\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const [query, setQuary] = useState('');\n  const [weather, setweather] = useState({});\n  const [jsondata, setjsondata] = useState({});\n\n   const searchButtonPress = (e) =>{\n    removeError();\n    addLoader();\n     e.preventDefault();\n    fetch(`${api.base}forecast/daily?city=${query}&days=7&key=${api.key}`)\n    .then(res => res.json())\n    .then(result =>{ \n      setweather(result);\n      removeLoder();\n      setjsondata(result.data[0].weather);\n      setQuary('');\n    })\n    .catch((error) => {\n      console.error('error:', error);\n      addError();\n      removeLoder();\n    });\n   };\n   useEffect(() => {\n    removeError()\n    addLoader();\n    fetch(`${api.base}forecast/daily?city=colombo&days=7&key=${api.key}`)\n    .then(res => res.json())\n    .then(result =>{ \n      setweather(result);\n      removeLoder();\n      setjsondata(result.data[0].weather);\n      setQuary('');\n    })\n    .catch((error) => {\n      console.error('error:', error);\n      addError();\n      removeLoder();\n\n    });\n  },[]);\n  const removeLoder  = () =>{\n    var element = document.getElementById(\"loader\");\n    element.classList.add(\"display-off\");\n  }\n  const addLoader = () =>{\n    var element = document.getElementById(\"loader\");\n    element.classList.remove(\"display-off\");\n  }\n\n  const removeError  = () =>{\n    var element = document.getElementById(\"error-text\");\n    element.classList.add(\"display-off\");\n  }\n  const addError = () =>{\n    var element = document.getElementById(\"error-text\");\n    element.classList.remove(\"display-off\");\n  }\n  \n    \n \n     \n  const data = weather.data?weather.data.map(e => e.temp):[];\n   const weather_description = weather.data?weather.data.map(e =>(\n      e.weather\n   )):[];\n \n  const weatherData = {...weather_description[0]};\n  const dateNow = Date();\n  //console.log(jsondata.description);\n  \n const iconurl = `https://www.weatherbit.io/static/img/icons/${weatherData.icon}.png`;\n\n\nconst weatherImage = backchange(jsondata.description)\n \n\n let myclassNAme ;\n if ((jsondata.description)) {\n   if ((weatherImage === 'Thunderstorm-with-light-rain')) {\n    myclassNAme = 'Thunderstorm-with-light-rain';\n   }\n   else if ((weatherImage === 'Light-Drizzle')) {\n    myclassNAme = 'Light-Drizzle';\n   }\n   else if ((weatherImage === 'Overcast-clouds')) {\n    myclassNAme = 'Overcast-clouds';\n   }\n   else if ((weatherImage === 'Freezing-Fog')) {\n    myclassNAme = 'Freezing-Fog';\n   }\n   else if ((weatherImage === 'Clear-sky')) {\n    myclassNAme = 'Clear-sky';\n   }\n   else if ((weatherImage === 'Light-snow')) {\n    myclassNAme = 'Light-snow';\n   }\n }else {\n  myclassNAme = 'card-root';\n }\n\n  return (\n    <div className=\"App\">\n      <main className=\"main-body\">\n    <Card className={ myclassNAme}>\n      <CardHeader className=\"Card-headder\"\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            W\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon  color=\"secondary\"/>\n          </IconButton>\n        }\n        title={\n          <div className=\"topic\">Weather Forecast</div>\n        }\n        \n      />\n      <CardContent className=\"Card-content\">\n        <div className=\"search-bar\">\n          <Paper component=\"form\" className=\"\">\n            <InputBase\n              className=\"search-input\"\n              placeholder=\"Search...\"\n              inputProps={{ 'aria-label': 'search google maps' }}\n              onChange={e => setQuary(e.target.value)}\n              value={query}\n            />\n            <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" onClick={(e) => searchButtonPress(e)}>\n              <SearchIcon />\n            </IconButton>\n            <Divider className={classes.divider} orientation=\"vertical\" />\n           \n            </Paper>\n        </div>\n        <div className=\"paper\">\n          <Paper className=\"paper-body\" elevation={3}>\n          <Typography paragraph id=\"error-text\" className=\"error-text display-off\">Search Results Not Available </Typography>\n          <CircularProgress id=\"loader\" color=\"secondary\" />\n          <Typography paragraph className=\"city-text\">{weather.city_name}</Typography>\n          <Typography paragraph className=\"date-text\">{moment(dateNow).format('LL')}</Typography>\n           {data[0]}°C\n              <CardMedia\n                className=\"media\"\n                image={iconurl}\n                title=\"Paella dish\"\n              />\n          \n            \n            <div className=\"weather\">\n              {weatherData.description}\n            </div>\n          </Paper>\n        </div>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon color=\"secondary\"/>\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon color=\"secondary\"/>\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n          color=\"secondary\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent className=\"item-body\">\n        <div>\n        {\n          weather.data?weather.data.map(e => \n            <div key={e.sunset_ts} className=\"item-content\">\n              <Card className={classes.root}>\n                <div className={classes.details}>\n                  <CardContent className=\"classes-content\">\n                    <div className=\"classes-control-1\">\n                      {e.valid_date}\n                    </div>\n                    <div className=\"classes-control-1\">\n                    {e.temp}°C\n                    </div>\n                    <div className=\"classes-control-1\">\n                    <CardMedia\n                        className=\"classes-control-media\"\n                        image={`https://www.weatherbit.io/static/img/icons/${e.weather.icon}.png`}\n                        title=\"Paella dish\"\n                    />\n                    </div>\n                  </CardContent>\n                </div>\n                </Card>\n            </div>\n          ):[]\n        }\n        </div>\n          \n        </CardContent>\n      </Collapse>\n    </Card>\n      </main>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}